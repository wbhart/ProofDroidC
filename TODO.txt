Critical:

* Check equality is the right kind each place it is used

* Make di/ci append a new line instead of modifying existing one

* Propagate restrictions/assumptions

* Split iff's

* Allow user to enter hypotheses and targets manually

* Modify parser error to show position in string where error occurs with arrow pointing

* Should skolem functions be renamed to prevent capture in modus_ponens?
  What about non-skolem functions?

* Add special implication-to-disjunction case to modus_ponens.

* Deal with modus ponens case where single unit clause is a disjunction.

Noncritical:

* print/parse \not\subseteq and \not\leq (the latter can't be made into > in general,
  e.g. partial orders), and \neg(A \subseteq B), \neg(a \leq b), etc. Must internally
  canonicalise to \neg(blah) for negated literal purposes for resolution

* Helpful error messages in parser (i.e. rules corresponding to non-matching inputs)

Maybe:
