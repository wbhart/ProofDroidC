Critical:

* Add purge_dead which kills and deactivates all hypotheses which can only be used to prove dead targets.
  Use it around line 339 of completion.

* When moving to next target, must check for next target that is not proved for current assumptions

* When adding new target, update restrictions of all hyps for new target if old allowed

* Check for tautologies in check_done

* When selecting targets, activate only those hyps whose assumptions are a subset of an unproved
  set of assumptions for current leaf hydra

* Put assumptions/restrictions debugging code in print_tableau

* Split iff's

* Write completion checking function

* Factor out dealing with restrictions/assumptions in moves by making functions that
  deal with tablines, e.g. copy_restrictions, combine_restrictions, etc.

* Should targets have restrictions/assumptions?

* Make checking moves (e.g. check_restrictions/assumptions) optional, so this doesn't
  duplicate work automation will be doing before executing the moves

* Should skolem functions be renamed to prevent capture in modus_ponens?
  What about non-skolem functions?

* Add special implication-to-disjunction case to modus_ponens.

* Deal with modus ponens case where single unit clause is a disjunction.

Noncritical:

* Modify parser error to show position in string where error occurs with arrow pointing

* Allow user to enter hypotheses and targets manually

* print/parse \not\subseteq and \not\leq (the latter can't be made into > in general,
  e.g. partial orders), and \neg(A \subseteq B), \neg(a \leq b), etc. Must internally
  canonicalise to \neg(blah) for negated literal purposes for resolution

* Helpful error messages in parser (i.e. rules corresponding to non-matching inputs)

Maybe:
